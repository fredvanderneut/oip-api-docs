swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "OIP"
host: "oip.ovation.io"
basePath: "/api/v1"
tags:
- name: "Function Groups"
  description: ""
- name: "Functions"
  description: ""
- name: "Invocations"
  description: ""
schemes:
- "https"
- "http"
paths:
  /function_groups:
    get:
      tags:
      - "Function Groups"
      summary: "Get list of function groups"
      description: ""
      operationId: "getFunctionGroups"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/FunctionGroup"
    post:
      tags:
      - "Function Groups"
      summary: "Create a function group"
      description: ""
      operationId: "postFunctionGroup"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        "201":
          description: "successfully created function group"
          schema:
            $ref: "#/definitions/FunctionGroup"
  /functions:
    get:
      tags:
      - "Functions"
      summary: "Get list of functions"
      description: ""
      operationId: "getFunctions"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Function"
    post:
      tags:
      - "Functions"
      summary: "Create a function"
      description: ""
      operationId: "postFunction"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CreateFunction"
      responses:
        "201":
          description: "successfully created function"
          schema:
            $ref: "#/definitions/Function"
    put:
      tags:
      - "Functions"
      summary: "Update a function"
      description: ""
      operationId: "putFunction"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/CreateFunction"
      responses:
        "200":
          description: "successfully updated function"
          schema:
            $ref: "#/definitions/Function"
  /functions/{functionId}:
    get:
      tags:
      - "Functions"
      summary: "Get function"
      description: ""
      operationId: "getFunction"
      produces:
      - "application/json"
      parameters:
      - name: "functionId"
        in: "path"
        description: "ID of function to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Function"
  /functions/{functionId}/create_version:
    post:
      tags:
      - "Functions"
      summary: "Create new version for function"
      description: ""
      operationId: "postFunctionVersion"
      produces:
      - "application/json"
      parameters:
      - name: "functionId"
        in: "path"
        description: "ID of function to invoke"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/FunctionVersion"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/FunctionVersion"
  /functions/{functionId}/invoke:
    post:
      tags:
      - "Functions"
      summary: "Invoke a function"
      description: ""
      operationId: "invokeFunction"
      produces:
      - "application/json"
      parameters:
      - name: "functionId"
        in: "path"
        description: "ID of function to invoke"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Invoke"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Invocation"
  /invocations/{invocationId}:
    get:
      tags:
      - "Invocations"
      summary: "Get invocation"
      description: ""
      operationId: "getInvocation"
      produces:
      - "application/json"
      parameters:
      - name: "invocationId"
        in: "path"
        description: "ID of invocation to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Invocation"
  /invocations/{invocationId}/retry_invocation:
    post:
      tags:
      - "Invocations"
      summary: "Retry invocation"
      description: ""
      operationId: "retryInvocation"
      produces:
      - "application/json"
      parameters:
      - name: "invocationId"
        in: "path"
        description: "ID of invocation to retry"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successfully resubmitted invocation"
          schema:
            $ref: "#/definitions/Invocation"
  /invocations:
    get:
      tags:
      - "Invocations"
      summary: "Get invocations for function and version"
      description: ""
      operationId: "getInvocationsForFunction"
      produces:
      - "application/json"
      parameters:
      - name: "functionId"
        in: "query"
        description: "ID of function to use"
        required: true
        type: "integer"
        format: "int64"
      - name: "version"
        in: "query"
        description: "version of function to use"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Invocation"
definitions:
  FunctionGroup:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
  Function:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      group:
        type: "string"
      description:
        type: "string"
      function_versions:
        $ref: "#/definitions/FunctionVersion"
  CreateFunction:
    type: "object"
    properties:
      name:
        type: "string"
      group:
        type: "string"
      description:
        type: "string"
      scriptFilePath:
        type: "string"
      versionDescription:
        type: "string"
      function_versions:
        $ref: "#/definitions/FunctionVersion"
  FunctionVersion:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      version:
        type: "integer"
        format: "int64"
      description:
        type: "string"
      scriptPath:
        type: "string"
  Invocation:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      invocatedAt:
        type: "string"
      invocationAttempts:
        $ref: "#/definitions/InvocationAttempt"
  InvocationAttempt:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      status:
        type: "string"
      statusMessage:
        type: "string"
      callbackStatus:
        type: "string"
  Invoke:
    type: "object"
    properties:
      version:
        type: "integer"
        format: "int64"
      callbackUrl:
        type: "string"
      payload:
        type: "object"
      meta:
        type: "object"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"